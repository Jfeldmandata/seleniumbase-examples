name: CI build
on:
  schedule:
    - cron: "30 * * * *"
  push:
    branches: [ master ]
  pull_request:
    branches:
  workflow_dispatch:
    branches:

jobs:
  build:

    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 15
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade wheel
        pip install -r requirements.txt
    - name: Install SeleniumBase
      run: |
        python setup.py install
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are flake8 issues
        flake8 . --count --show-source --statistics --exclude=temp
    - name: Install Chrome, Edge, and Firefox
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install google-chrome-stable
        sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
        sudo apt update
        sudo apt install microsoft-edge-stable
        sudo apt-get install firefox
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver and edgedriver
      run: |
        seleniumbase install chromedriver
        seleniumbase install edgedriver
    - name: Install geckodriver
      if: matrix.os == 'ubuntu-20.04'
      run: |
        seleniumbase install geckodriver
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py
    - name: Run pytest boilerplate_test.py --firefox --xvfb --reruns=1
      if: matrix.os == 'ubuntu-20.04'
      run: |
        pytest examples/boilerplates/boilerplate_test.py --firefox --xvfb --reruns=1 -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest boilerplate_test.py --edge --headless --reruns=1
      run: |
        pytest examples/boilerplates/boilerplate_test.py --edge --headless --reruns=1 -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest boilerplate_test.py --chrome --headless --reruns=2 --reruns-delay=10
      run: |
        pytest examples/boilerplates/boilerplate_test.py --chrome --headless --reruns=2 --reruns-delay=10 -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest examples/test_calculator.py --headless2 --rs -v -s --junit-xml=junit/test-results.xml
      run: |
        pytest examples/test_calculator.py --headless2 --rs -v -s --junit-xml=junit/test-results.xml --list-fail-page
    - name: Run pytest examples/test_canvas.py --headless2 -v -s --junit-xml=junit/test-results.xml
      run: |
        pytest examples/test_canvas.py --headless2 -v -s --junit-xml=junit/test-results.xml --list-fail-page
    - name: Run pytest examples/test_tinymce.py --headless2 -v -s --junit-xml=junit/test-results.xml
      run: |
        pytest examples/test_tinymce.py --headless2 -v -s --junit-xml=junit/test-results.xml --list-fail-page
    - name: Run python examples/raw_sb.py --headless2
      run: |
        python examples/raw_sb.py --headless2
    - name: Run pytest examples/test_mfa_login.py --headless2 -v -s --junit-xml=junit/test-results.xml
      run: |
        pytest examples/test_mfa_login.py --headless2 -v -s --junit-xml=junit/test-results.xml --list-fail-page
    - name: Run pytest examples/test_drag_and_drop.py --headless2 -v -s --junit-xml=junit/test-results.xml
      run: |
        pytest examples/test_drag_and_drop.py --headless2 -v -s --junit-xml=junit/test-results.xml --list-fail-page
    - name: Run pytest examples/test_demo_site.py --headless2 -v -s --junit-xml=junit/test-results.xml
      run: |
        pytest examples/test_demo_site.py --headless2 -v -s --junit-xml=junit/test-results.xml --list-fail-page
    - name: Run pytest examples/test_docs_site.py --headless2 --reruns=2 -v -s --junit-xml=junit/test-results.xml
      if: matrix.os == 'ubuntu-20.04'
      run: |
        pytest examples/test_docs_site.py --headless2 --reruns=2 -v -s --junit-xml=junit/test-results.xml --list-fail-page
    - name: Run pytest -m ready --browser=chrome --rs --headless -v -s --dashboard
      run: |
        pytest -m ready --browser=chrome --rs --headless -v -s --junit-xml=junit/test-results.xml --dashboard --list-fail-page
    - name: Run pytest examples/wordle_test.py -v -s --reruns=7 --headless2
      run: |
        pytest examples/wordle_test.py -v -s --reruns=7 --headless2
    - name: Verify sbvirtualdisplay install from PyPI
      run: |
        pip install sbvirtualdisplay -U --no-deps --force-reinstall --no-cache-dir
    - name: Verify seleniumbase install from PyPI
      run: |
        pip install seleniumbase -U --no-deps --force-reinstall --no-cache-dir
