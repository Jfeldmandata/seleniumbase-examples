name: CI build
on:
  schedule:
    - cron: "30 * * * *"
  push:
    branches: [ master ]
  pull_request:
    branches:
  workflow_dispatch:
    branches:

jobs:
  build:

    env:
      PY_COLORS: "1"
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        os: [ubuntu-20.04, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    # runs-on: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade wheel
        pip install -r requirements.txt
    - name: Install SeleniumBase
      run: |
        python setup.py install
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are flake8 issues
        flake8 . --count --show-source --statistics --exclude=temp
    - name: Install Chrome, Edge, and Firefox
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install google-chrome-stable
        sudo add-apt-repository "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main"
        sudo apt update
        sudo apt install microsoft-edge-stable
        sudo apt-get install firefox
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    - name: Install chromedriver, edgedriver, and geckodriver
      run: |
        seleniumbase install chromedriver
        seleniumbase install edgedriver
        seleniumbase install geckodriver
    - name: Make sure pytest is working
      run: |
        echo "def test_1(): pass" > nothing.py
        pytest nothing.py
    - name: Upgrade chromedriver to match the Chrome version
      run: |
        pytest examples/upgrade_chromedriver.py
    - name: Run pytest boilerplate_test.py --browser=chrome --headless
      run: |
        pytest examples/boilerplates/boilerplate_test.py --browser=chrome --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest boilerplate_test.py --browser=edge --headless
      run: |
        pytest examples/boilerplates/boilerplate_test.py --browser=edge --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest boilerplate_test.py --browser=edge --xvfb
      run: |
        pytest examples/boilerplates/boilerplate_test.py --browser=edge --xvfb -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest boilerplate_test.py --browser=firefox --headless
      run: |
        pytest examples/boilerplates/boilerplate_test.py --browser=firefox --headless -v -s --junit-xml=junit/test-results.xml
    - name: Run pytest -m ready --browser=chrome --rs --headless -v -s --dashboard
      run: |
        pytest -m ready --browser=chrome --rs --headless -v -s --junit-xml=junit/test-results.xml --dashboard
    - name: Run pytest examples/wordle_test.py --xvfb -v -s --reruns=3
      run: |
        pytest examples/wordle_test.py --xvfb -v -s --reruns=3
